{"version":3,"sources":["Components/Contacts/Contacts.module.css","Components/Filter/Filter.module.css","App.module.css","redux/contacts/contacts-action.js","Components/Form/Form.js","Components/Contacts/Contacts.js","Components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","Components/Form/Form.module.css"],"names":["module","exports","getSubmitData","createAction","handelDelete","changeFilterValue","connect","dispatch","submitMethod","name","number","id","useState","setName","setNumber","setId","uniqId","uuidv4","handleClick","event","target","value","resetState","className","s","Container","Form","onSubmit","preventDefault","Label","htmlFor","Input","type","pattern","title","required","onChange","Button","state","contacts","filter","contact","toLowerCase","includes","deleteFunction","map","List","onClick","contactsAction","App","Title","createReducer","action","payload","persistConfig","key","storage","rootReducer","combineReducers","contactReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,uBAAuB,OAAS,2B,mBCAzDD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,MAAQ,wB,mBCAxDD,EAAOC,QAAU,CAAC,MAAQ,qB,yHCuBX,GAAEC,cAtBKC,YAAa,0BAsBHC,aAbXD,YAAa,yBAaYE,kBAPpBF,YAAa,+B,OC2ExBG,cAAQ,MALI,SAAAC,GAAQ,MAAK,CACtCC,aAAc,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACZJ,EAASL,EAAcA,cAAc,CAAEO,OAAMC,SAAQC,YAG1CL,EArFF,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aAKd,EAAwBI,mBAAS,IAAjC,mBAAOH,EAAP,KAAaI,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOF,EAAP,KAAeI,EAAf,KACA,EAAoBF,mBAAS,IAA7B,mBAAOD,EAAP,KAAWI,EAAX,KAEMC,EAASC,cAETC,EAAc,SAAAC,GAClB,MAA4BA,EAAMC,OAA1BC,EAAR,EAAQA,MAAOZ,EAAf,EAAeA,KAAME,EAArB,EAAqBA,GAErB,OAAQF,GACN,IAAK,OACHI,EAAQQ,GACR,MACF,IAAK,SACHP,EAAUO,GACV,MACF,QACE,OAGJN,EAAMJ,IASFW,EAAa,WACjBT,EAAQ,IACRC,EAAU,IACVC,EAAM,KAGR,OACE,qBAAKQ,UAAWC,IAAEC,UAAlB,SACE,uBAAMF,UAAWC,IAAEE,KAAMC,SAdR,SAAAR,GACnBA,EAAMS,iBACNpB,EAAa,CAAEC,OAAMC,SAAQC,OAC7BW,KAWE,UACE,wBAAOC,UAAWC,IAAEK,MAAOC,QAASd,EAApC,iBAEE,uBACEO,UAAWC,IAAEO,MACbC,KAAK,OACLvB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRd,MAAOZ,EACP2B,SAAUlB,EACVP,GAAIM,mBAIR,2CAEE,uBACEe,KAAK,MACLT,UAAWC,IAAEO,MACbtB,KAAK,SACLwB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUlB,EACVG,MAAOX,EACPC,GAAIM,mBAGR,wBAAQe,KAAK,SAAST,UAAWC,IAAEa,OAAnC,4E,iBCjCO/B,eAfQ,SAAAgC,GACrB,IAAQC,EAAqBD,EAArBC,SAAUC,EAAWF,EAAXE,OAKlB,MAAO,CACLD,SALqBA,EAASC,QAAO,SAAAC,GAAO,OAC5CA,EAAQhC,KAAKiC,cAAcC,SAASH,EAAOE,sBAQpB,SAAAnC,GACzB,MAAO,CAAEqC,eAAgB,SAAAjC,GAAE,OAAIJ,EAASH,EAAaA,aAAaO,QAGrDL,EAxCE,SAAC,GAAkC,IAAhCiC,EAA+B,EAA/BA,SAAUK,EAAqB,EAArBA,eAC5B,OACE,8BACE,6BACGL,EAASM,KAAI,SAAAJ,GACZ,OACE,qBAAIlB,UAAWC,IAAEsB,KAAjB,UACGL,EAAQhC,KADX,KACmBgC,EAAQ/B,OACzB,wBACEa,UAAWC,IAAEa,OACbL,KAAK,SACLe,QAAS,WACPH,EAAeH,EAAQ9B,KAJ3B,sBAF0B8B,EAAQ9B,c,iBCqBjCL,eAbQ,SAAAgC,GACrB,MAAO,CACLjB,MAAOiB,EAAME,WAIU,SAAAjC,GACzB,MAAO,CACL6B,SAAU,SAAAjB,GAAK,OACbZ,EAASyC,EAAe3C,kBAAkBc,EAAMC,OAAOC,YAI9Cf,EA3BA,SAAC,GAAyB,IAAvBe,EAAsB,EAAtBA,MAAOe,EAAe,EAAfA,SACvB,OACE,wBAAOb,UAAWC,IAAEK,MAApB,8FAEE,uBACEN,UAAWC,IAAEO,MACbC,KAAK,OACLX,MAAOA,EACPe,SAAUA,U,yBCPLa,EAAM,WA8CjB,OACE,qCACE,oBAAI1B,UAAWC,IAAE0B,MAAjB,uBACA,cAAC,EAAD,IACA,oBAAI3B,UAAWC,IAAE0B,MAAjB,sBACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,Q,QCrBS,GAAEX,SArCAY,YAAc,GAAI,CACjC,yBAA0B,SAACb,EAAOc,GAChC,MAAM,GAAN,mBAAWd,GAAX,CAAkBc,EAAOC,WAE3B,wBAAyB,SAACf,EAAOc,GAC/B,OAAOd,EAAME,QAAO,SAAAC,GAAO,OAAIA,EAAQ9B,KAAOyC,EAAOC,cAgC9Bb,OAhBZW,YAAc,GAAI,CAC/B,6BAA8B,SAACb,EAAOc,GACpC,OAAOA,EAAOC,Y,sBCPZC,EAAgB,CACpBC,IAAK,QACLC,Q,OAAAA,GAGIC,EAAcC,YAAgB,CAClCnB,SAAUoB,EAAepB,SACzBC,OAAQmB,EAAenB,SAGnBoB,EAAmBC,YAAeP,EAAeG,GAEjDK,EAAQC,YAAe,CAC3BC,QAASJ,EACTK,UAAUC,EACVC,WAAYC,YAAqB,CAC/BC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,UAQjD,GAAEd,QAAOe,UAHNC,YAAahB,I,QCjC/BiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUnB,MAAOA,EAAMA,MAAvB,SACE,cAAC,IAAD,CAAaoB,QAAS,KAAML,UAAWf,EAAMe,UAA7C,SACE,cAAC,EAAD,UAINM,SAASC,eAAe,U,kBCd1BpF,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,oBAAoB,MAAQ,oBAAoB,OAAS,wB","file":"static/js/main.fc814a3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"Contacts_List__2V3YO\",\"Button\":\"Contacts_Button__3WuIa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__1q_sH\",\"Input\":\"Filter_Input__2MQXK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"App_Title__2qxNr\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst getSubmitData = createAction('contacts/getSubmitData');\n\n// const getSubmitData = data => {\n//   return {\n//     type: types.getSubmitData,\n//     payload: data,\n//   };\n// };\n\nconst handelDelete = createAction('contacts/handelDelete');\n\n// const handelDelete = data => {\n//   return { type: types.handelDelete, payload: data };\n// };\n\nconst changeFilterValue = createAction('contacts/changeFilterValue');\n\n// const changeFilterValue = value => {\n//   return { type: types.changeFilterValue, payload: value };\n// };\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getSubmitData, handelDelete, changeFilterValue };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\nimport { connect } from 'react-redux';\nimport getSubmitData from '../../redux/contacts/contacts-action';\n\nconst Form = ({ submitMethod }) => {\n  Form.propTypes = {\n    submitMethod: PropTypes.func.isRequired,\n  };\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [id, setId] = useState('');\n\n  const uniqId = uuidv4();\n\n  const handleClick = event => {\n    const { value, name, id } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n\n    setId(id);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    submitMethod({ name, number, id });\n    resetState();\n  };\n\n  const resetState = () => {\n    setName('');\n    setNumber('');\n    setId('');\n  };\n\n  return (\n    <div className={s.Container}>\n      <form className={s.Form} onSubmit={handleSubmit}>\n        <label className={s.Label} htmlFor={uniqId}>\n          Name\n          <input\n            className={s.Input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            value={name}\n            onChange={handleClick}\n            id={uuidv4()}\n          />\n        </label>\n\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            className={s.Input}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleClick}\n            value={number}\n            id={uuidv4()}\n          />\n        </label>\n        <button type=\"submit\" className={s.Button}>\n          Отправить\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  submitMethod: ({ name, number, id }) =>\n    dispatch(getSubmitData.getSubmitData({ name, number, id })),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\nimport { connect } from 'react-redux';\nimport handelDelete from '../../redux/contacts/contacts-action';\n\nconst Contacts = ({ contacts, deleteFunction }) => {\n  return (\n    <div>\n      <ul>\n        {contacts.map(contact => {\n          return (\n            <li className={s.List} key={contact.id}>\n              {contact.name}: {contact.number}\n              <button\n                className={s.Button}\n                type=\"button\"\n                onClick={() => {\n                  deleteFunction(contact.id);\n                }}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nconst mapSateToProps = state => {\n  const { contacts, filter } = state;\n  const visibleContact = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return {\n    contacts: visibleContact,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { deleteFunction: id => dispatch(handelDelete.handelDelete(id)) };\n};\n\nexport default connect(mapSateToProps, mapDispatchToProps)(Contacts);\n\nContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteFunction: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-action';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.Label}>\n      Фильтр по имени:\n      <input\n        className={s.Input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nconst mapSateToProps = state => {\n  return {\n    value: state.filter,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChange: event =>\n      dispatch(contactsAction.changeFilterValue(event.target.value)),\n  };\n};\n\nexport default connect(mapSateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport Form from './Components/Form/Form';\nimport Contacts from './Components/Contacts/Contacts';\nimport Filter from './Components/Filter/Filter';\nimport s from './App.module.css';\nimport { ToastContainer } from 'react-toastify';\n\nexport const App = () => {\n  // const [contacts, setContacts] = useState([]);\n  // const [filter, setFilter] = useState('');\n\n  // useEffect(() => {\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\n  // }, [contacts]);\n\n  // useEffect(() => {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const contactsPars = JSON.parse(contacts);\n  //   if (contactsPars) {\n  //     setContacts(contactsPars);\n  //   }\n  // }, []);\n\n  // const getSubmitData = data => {\n  //   if (\n  //     contacts.find(\n  //       contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n  //     )\n  //   ) {\n  //     toast.error('Hey, this name always here!');\n  //     return;\n  //   }\n\n  //   setContacts([...contacts, data]);\n  // };\n\n  // const changeFilterValue = event => {\n  //   const { value } = event.target;\n  //   setFilter(value);\n  // };\n\n  // const getVisibleContacts = () => {\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(filter.toLowerCase()),\n  //   );\n  // };\n\n  // const handelDelete = data => {\n  //   setContacts(contacts.filter(contact => contact.id !== data));\n  // };\n\n  // const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      <h1 className={s.Title}>PhoneBook</h1>\n      <Form />\n      <h2 className={s.Title}>Contacts</h2>\n      <Filter />\n      <Contacts />\n      <ToastContainer />\n    </>\n  );\n};\n","import { createReducer } from '@reduxjs/toolkit';\n\nconst contacts = createReducer([], {\n  'contacts/getSubmitData': (state, action) => {\n    return [...state, action.payload];\n  },\n  'contacts/handelDelete': (state, action) => {\n    return state.filter(contact => contact.id !== action.payload);\n  },\n});\n\n// const contacts = (state = [], action) => {\n//   switch (action.type) {\n//     case types.getSubmitData:\n//       return [...state, action.payload];\n\n//     case types.handelDelete:\n//       return state.filter(contact => contact.id !== action.payload);\n\n//     default:\n//       return state;\n//   }\n// };\nconst filter = createReducer('', {\n  'contacts/changeFilterValue': (state, action) => {\n    return action.payload;\n  },\n});\n\n// const filter = (state = '', action) => {\n//   switch (action.type) {\n//     case types.changeFilterValue:\n//       return action.payload;\n//     default:\n//       return state;\n//   }\n// };\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { contacts, filter };\n","import contactReducer from './contacts/contacts-reducer';\nimport {\n  configureStore,\n  combineReducers,\n  getDefaultMiddleware,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'hello',\n  storage,\n};\n\nconst rootReducer = combineReducers({\n  contacts: contactReducer.contacts,\n  filter: contactReducer.filter,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  devTools: process.env.NODE_ENV === 'development',\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Form_Container__2LBkn\",\"Label\":\"Form_Label__1q0Y-\",\"Input\":\"Form_Input__29dvv\",\"Button\":\"Form_Button__Zkrc7\"};"],"sourceRoot":""}